- docker login ==> login to docker hub.
- docker version ==> installed version.

LISTING THE CONTAINER
- docker image ls ==> list the docker image.
- docker container ls ==> list the docker container.
- docker ps ==> display the running container details.
- docker ps --all ==> display all the container even the exited container too.

START THE CONTAINER
- docker run -d <Image-id> ==> starts the container in the background.
- docker start <container-id> ==> start the container again. 
- docker start -a <container-id> ==> starts the container and gives the output of the container.
- docker run <container-id> ls ==> overrides the container main execute command and executes the command we gave (i.e ls)


STOP THE CONTAINER
- docker stop <container-id>
- docker kill <container-id 

DOCKER START ON STARTUP 
- sudo systemctl enable docker.service
- sudo systemctl enable containerd.service

- Sudo systemctl disable docker.service
- sudo systemctl disable containerd.service

DELETEING
- docker system prune ==>
		This will remove - all stopped container
						 - all networks not used by at least one container
						 - all build cache 
						 
LOGS
- docker logs <container-id>

CONTAINER CLI
- docker exec -it <container-id> <cmd> ==> executes the cmd we give on the container terminal
- docker exec -it <container-id> sh ==> gets the shell access of the container

BUILDING IMAGES
- create a DOckerfile
	- specify the base Image
	- run some commands
	- specify a command to run on container startup
	
- docker build . ==> BUILDING IMAGES

- docker build -t 16091997/<repo-name>:latest .  ==> build images with name tag

CONTAINER PORT MAPPING
- docker run -p <host port> : <container port> <image-id> ==> request comes to host port will be re-directed to container port


INSTALL NODE-JS ON UBUNTU
- curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
- source ~/.nvm/nvm.sh
- nvm install node

BUILD DOCKERFILE WITH CUSTOM NAME
- docker build -f <custome fileName> .

DOCKER-COMPOSE

- docker-compose up --build ==> build the container and start the app.
- docker-compose up -d ==> starts the container 
- docker-compose down ==> stops the container
- docker-compose ps ==> list the compose running container , must be run inside the docker-compose.yml path

- Restart Policies
	- "no" ==> never restarts the container even if its crashes. , no shoudl be mentioned inside string
	- always ==> if the container stops for *any reason* it restarts.
	- on-failure ==> only restarts if the container stops with error code.
	- unless-stopped ==> always restarts unless we(developers) forcibily stops it.

DOCKER VOLUME
- docker run -p 3000:3000 -v /usr/app/node_modules -v $(pwd):/usr/app <image-id>
	==> running a container with volume 
		- -v $(pwd):/usr/app ==> host directory has been referenced to container working directory
		- -v /usr/app/node_modules ==> for node_modules container directory is being referenced